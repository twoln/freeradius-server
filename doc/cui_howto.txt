Chargeable-User-Identity (CUI) support.

1. OVERVIEW

This extension introduces support for Chargeable-User-Identity (CUI) attribute 
as defined in RFC 4372. 

The CUI attribute is meant to support roaming scenarios where
the user is accessing the network at one location (Service Provider - SP)
while authenticated by a RADIUS server at another institution (Identity
Provider - IdP). CUI provides means for the SP to request the IdP 
to return a unique, persistent, opaque user identifier.

As defined in RFC 4372, CUI request is sent as a NUL value (single
zero byte) of CUI attribute inside the Access-Request packet. 
CUI response should be sent as the CUI value inside the Access-Accept.

This extension has the following functionality:

The SP side (*requesting* CUI):
	- add the CUI NUL attribute to Access-Request proxied from 
	  the local NAS to the IdP
	- receive the CUI value from the IdP and store it in the local
	  database
	- update Accounting-Request packets sent by NAS by adding 
	  the appropriate CUI attribute (unless the attibute is 
	  already present).

The IdP side (*returning* CUI):
	- respond to the CUI request by generating the CUI value. 
	  The value is created as the md5 hash of a configurable local
	  salt and the User-Name attribute value.

2. INSTALLATION

The CUI *requesting* and CUI *returning* sides are implemented and
described separately. Most likely you want to run both, so just follow
the instructions of both sections.

2.1 *requesting* CUI 

	- Setup a MySQL database by creating (or using) a database of your
	  choice and create an additional table cui. The schema is located
	  in sql/mysql/cui.sql.

	- Enter the necessary details into modules/cui. Things you need to
	  modify are: 
	    server - typically this will be localhost;
	    login - mysql user allowed to modify the tables
	    password - password for this user
	    radius_db - database name you wish to use

	- Modify the the main configuration file "sites-availabe/default"
	  Search for CUI. There are four sections where CUI is mentioned.
	  Follow the instructions for *requesting* the CUI.

2.2 *returning* CUI 

	- Modify the the main configuration file "sites-available/default"
	  Search for CUI. There are four sections where CUI is mentioned.
  	  Follow the instructions for *returning* the CUI.
	  The cui_hash_key is used to safeguard the CUI from dictionary
	  attacks and should be set to some "random" string.

	- Modify "sites-availabe/inner-tunnel"
	  Search for CUI. There is one section where CUI is mentioned.
	  Follow the instructions for *returning* the CUI.

3. ACKNOWLEDGEMENTS

Authors: Maja Gorecka-Wolniewicz <mgw@umk.pl>, Alan DeKok

Contributors: Stefan Winter, Tomasz Wolniewicz
